// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: test.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from test.proto</summary>
public static partial class TestReflection {

  #region Descriptor
  /// <summary>File descriptor for test.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static TestReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cgp0ZXN0LnByb3RvIlMKDHBiX3RlYW1faW5mbxIPCgd0ZWFtX2lkGAEgASgJ",
          "EhEKCWxlYWRlcl9pZBgCIAEoCRIPCgdtZW1iZXJzGAMgAygJEg4KBnN0YXR1",
          "cxgEIAEoBWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::pb_team_info), global::pb_team_info.Parser, new[]{ "TeamId", "LeaderId", "Members", "Status" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class pb_team_info : pb::IMessage<pb_team_info> {
  private static readonly pb::MessageParser<pb_team_info> _parser = new pb::MessageParser<pb_team_info>(() => new pb_team_info());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<pb_team_info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TestReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb_team_info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb_team_info(pb_team_info other) : this() {
    teamId_ = other.teamId_;
    leaderId_ = other.leaderId_;
    members_ = other.members_.Clone();
    status_ = other.status_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb_team_info Clone() {
    return new pb_team_info(this);
  }

  /// <summary>Field number for the "team_id" field.</summary>
  public const int TeamIdFieldNumber = 1;
  private string teamId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TeamId {
    get { return teamId_; }
    set {
      teamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "leader_id" field.</summary>
  public const int LeaderIdFieldNumber = 2;
  private string leaderId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LeaderId {
    get { return leaderId_; }
    set {
      leaderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "members" field.</summary>
  public const int MembersFieldNumber = 3;
  private static readonly pb::FieldCodec<string> _repeated_members_codec
      = pb::FieldCodec.ForString(26);
  private readonly pbc::RepeatedField<string> members_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Members {
    get { return members_; }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 4;
  private int status_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as pb_team_info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(pb_team_info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TeamId != other.TeamId) return false;
    if (LeaderId != other.LeaderId) return false;
    if(!members_.Equals(other.members_)) return false;
    if (Status != other.Status) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TeamId.Length != 0) hash ^= TeamId.GetHashCode();
    if (LeaderId.Length != 0) hash ^= LeaderId.GetHashCode();
    hash ^= members_.GetHashCode();
    if (Status != 0) hash ^= Status.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TeamId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(TeamId);
    }
    if (LeaderId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(LeaderId);
    }
    members_.WriteTo(output, _repeated_members_codec);
    if (Status != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Status);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TeamId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamId);
    }
    if (LeaderId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderId);
    }
    size += members_.CalculateSize(_repeated_members_codec);
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb_team_info other) {
    if (other == null) {
      return;
    }
    if (other.TeamId.Length != 0) {
      TeamId = other.TeamId;
    }
    if (other.LeaderId.Length != 0) {
      LeaderId = other.LeaderId;
    }
    members_.Add(other.members_);
    if (other.Status != 0) {
      Status = other.Status;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          TeamId = input.ReadString();
          break;
        }
        case 18: {
          LeaderId = input.ReadString();
          break;
        }
        case 26: {
          members_.AddEntriesFrom(input, _repeated_members_codec);
          break;
        }
        case 32: {
          Status = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
